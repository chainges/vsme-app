
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Social` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Social
 * 
 */
export type SocialModel = runtime.Types.Result.DefaultSelection<Prisma.$SocialPayload>






export type SocialNullableCompositeFilter = {
  equals?: Prisma.SocialObjectEqualityInput | null
  is?: Prisma.SocialWhereInput | null
  isNot?: Prisma.SocialWhereInput | null
  isSet?: boolean
}

export type SocialOrderByInput = {
  employees?: Prisma.EmployeesOrderByInput
}

export type SocialNullableCreateEnvelopeInput = {
  set?: Prisma.SocialCreateInput | null
}

export type SocialNullableUpdateEnvelopeInput = {
  set?: Prisma.SocialCreateInput | null
  upsert?: Prisma.SocialUpsertInput
  unset?: boolean
}

export type SocialWhereInput = {
  AND?: Prisma.SocialWhereInput | Prisma.SocialWhereInput[]
  OR?: Prisma.SocialWhereInput[]
  NOT?: Prisma.SocialWhereInput | Prisma.SocialWhereInput[]
  employees?: Prisma.XOR<Prisma.EmployeesNullableCompositeFilter, Prisma.EmployeesObjectEqualityInput> | null
}

export type EmployeesObjectEqualityInput = {
  fullTimeEmployees?: number | null
  partTimeEmployees?: number | null
  tempEmployees?: number | null
  reported: boolean
}

export type EmployeesCreateInput = {
  fullTimeEmployees?: number | null
  partTimeEmployees?: number | null
  tempEmployees?: number | null
  reported?: boolean
}

export type SocialUpsertInput = {
  set: Prisma.SocialCreateInput | null
  update: Prisma.SocialUpdateInput
}

export type SocialUpdateInput = {
  employees?: Prisma.XOR<Prisma.EmployeesNullableUpdateEnvelopeInput, Prisma.EmployeesCreateInput> | null
}



export type SocialSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  employees?: boolean | Prisma.EmployeesDefaultArgs<ExtArgs>
}, ExtArgs["result"]["social"]>



export type SocialSelectScalar = {}

export type SocialOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"employees", ExtArgs["result"]["social"]>
export type SocialInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $SocialPayload = {
  name: "Social"
  objects: {}
  scalars: {}
  composites: {
    employees: Prisma.$EmployeesPayload | null
  }
}

export type SocialGetPayload<S extends boolean | null | undefined | SocialDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$SocialPayload, S>





/**
 * Fields of the Social model
 */
export interface SocialFieldRefs {

}
    

// Custom InputTypes
/**
 * Social without action
 */
export type SocialDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Social
   */
  select?: Prisma.SocialSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Social
   */
  omit?: Prisma.SocialOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SocialInclude<ExtArgs> | null
}
